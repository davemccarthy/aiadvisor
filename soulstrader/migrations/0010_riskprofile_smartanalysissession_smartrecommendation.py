# Generated by Django 5.2.5 on 2025-09-22 10:51

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('soulstrader', '0009_trade_source_reference_trade_trade_source_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RiskProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_purchase_percentage', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Maximum percentage of portfolio value that can be invested in a single stock', max_digits=5)),
                ('min_confidence_score', models.DecimalField(decimal_places=2, default=Decimal('0.70'), help_text='Minimum confidence score threshold for recommendations', max_digits=3)),
                ('cash_spend_percentage', models.DecimalField(decimal_places=2, default=Decimal('20.00'), help_text='Percentage of available cash to spend on new positions', max_digits=5)),
                ('cooldown_period_days', models.IntegerField(default=7, help_text='Minimum days between purchases of the same stock')),
                ('max_rebuy_percentage', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Maximum percentage of existing position that can be added in a single buy', max_digits=5)),
                ('max_sector_allocation', models.DecimalField(decimal_places=2, default=Decimal('30.00'), help_text='Maximum percentage of portfolio in any single sector', max_digits=5)),
                ('min_diversification_stocks', models.IntegerField(default=5, help_text='Minimum number of different stocks to maintain')),
                ('auto_execute_trades', models.BooleanField(default=False, help_text='Automatically execute recommended trades')),
                ('auto_rebalance_enabled', models.BooleanField(default=True, help_text='Enable automatic portfolio rebalancing')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='risk_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmartAnalysisSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='RUNNING', max_length=20)),
                ('total_recommendations', models.IntegerField(default=0)),
                ('executed_recommendations', models.IntegerField(default=0)),
                ('portfolio_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('available_cash', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_cash_spend', models.DecimalField(decimal_places=2, max_digits=12)),
                ('risk_profile_snapshot', models.JSONField(default=dict, help_text='Risk profile settings at time of analysis')),
                ('advisor_weights', models.JSONField(default=dict, help_text='Advisor weights used in analysis')),
                ('recommendations_summary', models.JSONField(blank=True, default=dict)),
                ('execution_summary', models.JSONField(blank=True, default=dict)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_time_seconds', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smart_analysis_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['user', '-started_at'], name='soulstrader_user_id_34a6df_idx'), models.Index(fields=['status', '-started_at'], name='soulstrader_status_83f6a8_idx')],
            },
        ),
        migrations.CreateModel(
            name='SmartRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recommendation_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold')], max_length=10)),
                ('priority_score', models.DecimalField(decimal_places=2, help_text='Consolidated priority score', max_digits=5)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='Overall confidence score', max_digits=3)),
                ('initial_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('adjusted_weight', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('shares_to_buy', models.IntegerField(blank=True, null=True)),
                ('cash_allocated', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('existing_shares', models.IntegerField(default=0, help_text='Current shares owned')),
                ('current_position_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('position_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('current_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('reasoning', models.TextField(help_text='Consolidated reasoning from all advisors')),
                ('key_factors', models.JSONField(blank=True, default=list)),
                ('risk_factors', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('EXECUTED', 'Executed'), ('CANCELLED', 'Cancelled'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('is_successful', models.BooleanField(blank=True, null=True)),
                ('actual_return', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('advisor_recommendations', models.ManyToManyField(blank=True, related_name='smart_recommendations', to='soulstrader.aiadvisorrecommendation')),
                ('executed_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='smart_recommendation', to='soulstrader.trade')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smart_recommendations', to='soulstrader.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smart_recommendations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority_score', '-created_at'],
                'indexes': [models.Index(fields=['user', 'status', '-created_at'], name='soulstrader_user_id_629988_idx'), models.Index(fields=['recommendation_type', '-priority_score'], name='soulstrader_recomme_78276d_idx'), models.Index(fields=['stock', '-created_at'], name='soulstrader_stock_i_874cd2_idx')],
            },
        ),
    ]
