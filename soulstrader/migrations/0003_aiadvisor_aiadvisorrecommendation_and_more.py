# Generated by Django 5.2.5 on 2025-09-17 12:35

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('soulstrader', '0002_trade_average_fill_price_trade_commission_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAdvisor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('advisor_type', models.CharField(choices=[('OPENAI_GPT', 'OpenAI GPT'), ('CLAUDE', 'Anthropic Claude'), ('GEMINI', 'Google Gemini'), ('PERPLEXITY', 'Perplexity AI'), ('CUSTOM', 'Custom AI Service')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('api_endpoint', models.URLField(blank=True)),
                ('rate_limit_per_day', models.IntegerField(default=100)),
                ('rate_limit_per_minute', models.IntegerField(default=10)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('LIMITED', 'Limited (Trial/Rate Limited)'), ('ERROR', 'Error State')], default='ACTIVE', max_length=20)),
                ('is_enabled', models.BooleanField(default=True)),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=3)),
                ('total_recommendations', models.IntegerField(default=0)),
                ('successful_recommendations', models.IntegerField(default=0)),
                ('success_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('average_confidence', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('daily_api_calls', models.IntegerField(default=0)),
                ('monthly_api_calls', models.IntegerField(default=0)),
                ('last_api_call', models.DateTimeField(blank=True, null=True)),
                ('last_reset_date', models.DateField(auto_now_add=True)),
                ('prompt_template', models.TextField(blank=True)),
                ('analysis_parameters', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-success_rate', '-weight', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AIAdvisorRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recommendation_type', models.CharField(choices=[('STRONG_BUY', 'Strong Buy'), ('BUY', 'Buy'), ('HOLD', 'Hold'), ('SELL', 'Sell'), ('STRONG_SELL', 'Strong Sell')], max_length=20)),
                ('confidence_level', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('VERY_HIGH', 'Very High')], max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_at_recommendation', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reasoning', models.TextField()),
                ('key_factors', models.JSONField(blank=True, default=list)),
                ('technical_indicators', models.JSONField(blank=True, default=dict)),
                ('risk_factors', models.JSONField(blank=True, default=list)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXECUTED', 'Executed'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20)),
                ('is_successful', models.BooleanField(blank=True, null=True)),
                ('actual_return', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('evaluated_at', models.DateTimeField(blank=True, null=True)),
                ('raw_response', models.JSONField(blank=True, default=dict)),
                ('processing_time', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='soulstrader.aiadvisor')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_recommendations', to='soulstrader.stock')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsensusRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consensus_type', models.CharField(choices=[('STRONG_BUY', 'Strong Buy'), ('BUY', 'Buy'), ('HOLD', 'Hold'), ('SELL', 'Sell'), ('STRONG_SELL', 'Strong Sell'), ('NO_CONSENSUS', 'No Consensus')], max_length=20)),
                ('consensus_strength', models.DecimalField(decimal_places=2, max_digits=3)),
                ('total_advisors', models.IntegerField()),
                ('participating_advisors', models.IntegerField()),
                ('strong_buy_votes', models.IntegerField(default=0)),
                ('buy_votes', models.IntegerField(default=0)),
                ('hold_votes', models.IntegerField(default=0)),
                ('sell_votes', models.IntegerField(default=0)),
                ('strong_sell_votes', models.IntegerField(default=0)),
                ('weighted_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('average_confidence', models.DecimalField(decimal_places=2, max_digits=3)),
                ('average_target_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('auto_trade_eligible', models.BooleanField(default=False)),
                ('auto_trade_executed', models.BooleanField(default=False)),
                ('price_at_consensus', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_successful', models.BooleanField(blank=True, null=True)),
                ('actual_return', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('advisor_recommendations', models.ManyToManyField(related_name='consensus_recommendations', to='soulstrader.aiadvisorrecommendation')),
                ('auto_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='consensus_recommendation', to='soulstrader.trade')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consensus_recommendations', to='soulstrader.stock')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='aiadvisorrecommendation',
            index=models.Index(fields=['advisor', 'stock', '-created_at'], name='soulstrader_advisor_fc1f0b_idx'),
        ),
        migrations.AddIndex(
            model_name='aiadvisorrecommendation',
            index=models.Index(fields=['status', '-created_at'], name='soulstrader_status_6934c2_idx'),
        ),
        migrations.AddIndex(
            model_name='aiadvisorrecommendation',
            index=models.Index(fields=['recommendation_type', '-created_at'], name='soulstrader_recomme_100bb7_idx'),
        ),
        migrations.AddIndex(
            model_name='consensusrecommendation',
            index=models.Index(fields=['stock', '-created_at'], name='soulstrader_stock_i_b6d4c8_idx'),
        ),
        migrations.AddIndex(
            model_name='consensusrecommendation',
            index=models.Index(fields=['consensus_type', '-created_at'], name='soulstrader_consens_78bd95_idx'),
        ),
        migrations.AddIndex(
            model_name='consensusrecommendation',
            index=models.Index(fields=['auto_trade_eligible', '-created_at'], name='soulstrader_auto_tr_7e0047_idx'),
        ),
    ]
